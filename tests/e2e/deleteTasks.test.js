import { test, expect } from '@playwright/test';

test('Effacer une tache', async ({ page }) => {
    await page.goto('http://localhost:3000');

    // üîπ Connexion
    await page.getByRole('button', { name: 'Se connecter' }).click();
    await page.fill('#loginEmail', 'mudiay@yahoo.ca');
    await page.fill('#loginPassword', '12345678');
    await page.locator('#loginModal').getByRole('button', { name: 'Se connecter' }).click();

    // üîπ Attendre que la liste de t√¢ches apparaisse
    await page.waitForSelector('#taskList li');

    // üîπ V√©rifier le nombre de t√¢ches avant suppression
    const taskCount = await page.locator('#taskList li').count();
    console.log(`Nombre de t√¢ches avant suppression: ${taskCount}`);

    if (taskCount > 0) {
        // S√©lectionner la premi√®re t√¢che et cliquer sur le bouton "Effacer"
        await page.locator('#taskList li').first().locator('.delete').click();

        // Attendre la mise √† jour de la liste
        await page.waitForTimeout(1000); // Petit d√©lai pour la mise √† jour

        // V√©rifier que la t√¢che a bien √©t√© supprim√©e
        const newTaskCount = await page.locator('#taskList li').count();
        expect(newTaskCount).toBe(taskCount - 1);
    } else {
        console.log("Aucune t√¢che √† supprimer.");
    }

    // üîπ Se d√©connecter
    await page.getByRole('button', { name: 'Se d√©connecter' }).click();
});
